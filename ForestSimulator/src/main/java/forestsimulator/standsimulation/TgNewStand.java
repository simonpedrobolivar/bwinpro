/* http://www.nw-fva.de
   Version 07-11-2008

   (c) 2002 Juergen Nagel, Northwest German Forest Research Station, 
       Grätzelstr.2, 37079 Göttingen, Germany
       E-Mail: Juergen.Nagel@nw-fva.de
 
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT  WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
 */
/**
 *
 * @author  sschimpf
 */
package forestsimulator.standsimulation;

import forestsimulator.dbaccess.ConnectionFactory;
import java.awt.Frame;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ComboBoxModel;
import treegross.base.*;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JDialog;


public class TgNewStand extends JDialog {
    private static final Logger logger = Logger.getLogger(TgNewStand.class.getName());
    private final Stand st;
    private final TgJFrame frame;
    private final TgUser userSettings;
    private final ConnectionFactory connectionFactory;
    private final Map<String, Map<String, List<String>>> locations;

    public TgNewStand(Frame parent, Stand st1, TgJFrame owner, TgUser userSettings) {
        super(parent, true);
        this.connectionFactory = new ConnectionFactory();
        this.userSettings = userSettings;
        this.locations = loadAvailableLocations();
        st = st1;
        frame = owner;
        initComponents();
    }
    
    private Map<String, Map<String, List<String>>> loadAvailableLocations() {
        Map<String, Map<String, List<String>>> availableLocations = new HashMap<>();
        availableLocations.put("", Collections.emptyMap());
        if (!userSettings.getClimateDatabase().exists()) {
            return availableLocations;
        }
        try (Connection connection = connectionFactory.openDBConnection(userSettings.getClimateDatabase(), "", "");
                Statement stmt = connection.createStatement()) {
            try (ResultSet rs = stmt.executeQuery("select distinct federal_state_code, growing_subregion from input_data")) {
                while (rs.next()) {
                    final String state = rs.getString("federal_state_code");
                    final String growingSubregion = rs.getString("growing_subregion");
                    final String region = StandLocation.regionFrom(growingSubregion);
                    availableLocations.putIfAbsent(state, new HashMap<>());
                    availableLocations.get(state).putIfAbsent(region, new ArrayList<>());
                    availableLocations.get(state).get(region).add(growingSubregion);
                }
            }
        } catch (SQLException e) {
            logger.log(Level.SEVERE, "Problem with climate database", e);
        }
        return availableLocations;
    }
    
    private ComboBoxModel<String> availableStates() {
        return new DefaultComboBoxModel<>(this.locations.keySet().toArray(new String[0]));
    }
    
    private void updateSubRegionModel() {
        String region = selectedRegion();
        List<String> subRegions = this.locations.get(selectedState()).getOrDefault(region, Collections.emptyList());
        subRegionComboBox.setModel(new DefaultComboBoxModel<>(subRegions.toArray(new String[0])));
    }

    private String selectedState() {
        return (String) stateComboBox.getSelectedItem();
    }
    
    private String selectedRegion() {
        return (String) regionComboBox.getSelectedItem();
    }

    private String selectedSubRegion() {
        return (String) this.subRegionComboBox.getSelectedItem();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        newStandInfoLabel = new javax.swing.JLabel();
        areaSizeLabel = new javax.swing.JLabel();
        tf0 = new javax.swing.JTextField();
        createAreaButton = new javax.swing.JButton();
        areaShapeComboBox = new javax.swing.JComboBox();
        standNameTextField = new javax.swing.JTextField();
        standNameLabel = new javax.swing.JLabel();
        climateDataLabel = new javax.swing.JLabel();
        stateComboBox = new javax.swing.JComboBox<>();
        regionComboBox = new javax.swing.JComboBox<>();
        subRegionComboBox = new javax.swing.JComboBox<>();
        stateLabel = new javax.swing.JLabel();
        regionLabel = new javax.swing.JLabel();
        subRegionLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("forestsimulator/gui"); // NOI18N
        setTitle(bundle.getString("TgNewStand.title")); // NOI18N
        setModal(true);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setPreferredSize(new java.awt.Dimension(500, 250));

        newStandInfoLabel.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        newStandInfoLabel.setText(bundle.getString("TgNewStand.newStandInfoLabel.text")); // NOI18N

        areaSizeLabel.setText(bundle.getString("TgNewStand.areaSizeLabel.text")); // NOI18N

        tf0.setText("0.2"); // NOI18N

        createAreaButton.setText(bundle.getString("TgNewStand.createAreaButton.text")); // NOI18N
        createAreaButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                createAreaButtonActionPerformed(evt);
            }
        });

        areaShapeComboBox.setModel(new DefaultComboBoxModel(StandShape.values()));

        standNameTextField.setText(bundle.getString("TgNewStand.standNameTextField.text")); // NOI18N

        standNameLabel.setText(bundle.getString("TgNewStand.standNameLabel.text")); // NOI18N

        climateDataLabel.setText(bundle.getString("TgNewStand.climateDataLabel.text")); // NOI18N

        stateComboBox.setModel(availableStates());
        stateComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stateComboBoxActionPerformed(evt);
            }
        });

        regionComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regionComboBoxActionPerformed(evt);
            }
        });

        stateLabel.setText(bundle.getString("TgNewStand.stateLabel.text")); // NOI18N

        regionLabel.setText(bundle.getString("TgNewStand.regionLabel.text")); // NOI18N

        subRegionLabel.setText(bundle.getString("TgNewStand.subRegionLabel.text")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newStandInfoLabel)
                    .addComponent(climateDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(standNameLabel)
                            .addComponent(areaSizeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(tf0, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(areaShapeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(standNameTextField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(stateLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(regionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(regionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(subRegionLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(subRegionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(createAreaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(newStandInfoLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(standNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf0, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(areaSizeLabel)
                    .addComponent(areaShapeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(climateDataLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(stateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subRegionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stateLabel)
                    .addComponent(regionLabel)
                    .addComponent(subRegionLabel))
                .addGap(18, 18, 18)
                .addComponent(createAreaButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void createAreaButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_createAreaButtonActionPerformed
        st.newStand();
        st.ncpnt = 0;
        st.nspecies = 0;
        st.ntrees = 0;
        st.setSize(Double.parseDouble(tf0.getText()));
        st.standname = standNameTextField.getText();
        st.year = 2008;
        st.location = new StandLocation(
                selectedState(),
                selectedRegion(),
                selectedSubRegion());

        if (areaShapeComboBox.getSelectedIndex() == 0) {
            double len = Math.sqrt(10000 * st.size);
            st.addcornerpoint("ECK1", 0.0, 0.0, 0.0);
            st.addcornerpoint("ECK2", 0.0, len, 0.0);
            st.addcornerpoint("ECK3", len, len, 0.0);
            st.addcornerpoint("ECK4", len, 0.0, 0.0);
            st.center.no = "polygon";
            st.center.x = len / 2.0;
            st.center.y = len / 2.0;
            st.center.z = 0.0;

        } else {
            double radius = Math.sqrt(10000.0 * st.size / Math.PI);
            for (int i = 0; i < 18; i++) {
                double xp = radius + Math.sin(Math.PI * i * 20.0 / 180.0) * radius;
                double yp = radius + Math.cos(Math.PI * i * 20.0 / 180.0) * radius;
                //System.out.println(xp+" "+yp);
                st.addcornerpoint("ECKP" + i, xp, yp, 0.0);
                st.center.no = "circle";
                st.center.x = radius;
                st.center.y = radius;
                st.center.z = 0.0;
            }
        }

        frame.updatetp(false);
        dispose();
    }//GEN-LAST:event_createAreaButtonActionPerformed

    private void stateComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stateComboBoxActionPerformed
        Map<String, List<String>> regions = this.locations.get(selectedState());
        regionComboBox.setModel(new DefaultComboBoxModel<>(regions.keySet().toArray(new String[0])));
        if (regions.keySet().isEmpty()) {
            updateSubRegionModel();
            return;
        }
        regionComboBox.setSelectedIndex(0);
        updateSubRegionModel();
    }//GEN-LAST:event_stateComboBoxActionPerformed

    private void regionComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regionComboBoxActionPerformed
        updateSubRegionModel();
    }//GEN-LAST:event_regionComboBoxActionPerformed
   
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox areaShapeComboBox;
    private javax.swing.JLabel areaSizeLabel;
    private javax.swing.JLabel climateDataLabel;
    private javax.swing.JButton createAreaButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel newStandInfoLabel;
    private javax.swing.JComboBox<String> regionComboBox;
    private javax.swing.JLabel regionLabel;
    private javax.swing.JLabel standNameLabel;
    private javax.swing.JTextField standNameTextField;
    private javax.swing.JComboBox<String> stateComboBox;
    private javax.swing.JLabel stateLabel;
    private javax.swing.JComboBox<String> subRegionComboBox;
    private javax.swing.JLabel subRegionLabel;
    private javax.swing.JTextField tf0;
    // End of variables declaration//GEN-END:variables

}
