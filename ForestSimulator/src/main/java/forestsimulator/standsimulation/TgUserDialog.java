/* http://www.nw-fva.de
   Version 07-11-2008

   (c) 2002 Juergen Nagel, Northwest German Forest Research Station, 
       Grätzelstr.2, 37079 Göttingen, Germany
       E-Mail: Juergen.Nagel@nw-fva.de
 
This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation.

This program is distributed in the hope that it will be useful,
but WITHOUT  WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
 */
/**
 *
 * @author  sschimpf
 */
package forestsimulator.standsimulation;
import forestsimulator.language.UserLanguage;
import java.awt.Frame;
import java.io.File;
import java.io.IOException;
import java.util.ResourceBundle;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

public class TgUserDialog extends JDialog {
    private static final Logger logger = Logger.getLogger(TgUserDialog.class.getName());
    private final ResourceBundle messages = ResourceBundle.getBundle("forestsimulator/gui");
    private final UserLanguage Language;
    private final TgUser user = new TgUser(new File("."));
   
    public TgUserDialog(Frame parent, boolean modal) {
        super(parent, modal);
        if (user.fileExistsInWorkingDir("ForestSimulator.ini")) {
            logger.info("Settings laden");
            user.loadSettings();
        }
        Language = UserLanguage.forLocale(user.getLanguageShort());
        initComponents();
        if (user.getProgramDir().isDirectory()) {
            loadModels();
        }
        userDirectoryTextField.setText(user.getProgramDir().getName());
        outputDirectoryTextField.setText(user.getWorkingDir().getName());
        dataDirectoryTextField.setText(user.getDataDir().getName());
        climateDataFileTextField.setText(user.getClimateDatabase().getName());
        xmlFileComboBox.setSelectedItem(user.plugIn);
        languageSelector.setSelectedItem(Language);
        standGraphicComboBox.setSelectedIndex(user.grafik3D);
        pack();
    }

    private ComboBoxModel languageOptions() {
        return new DefaultComboBoxModel(UserLanguage.entriesFor(Language.locale()));
    }
    
    private UserLanguage.LanguageEntry activeLanguage() {
        return new UserLanguage.LanguageEntry(Language, Language.locale());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        languageLabel = new javax.swing.JLabel();
        languageSelector = new javax.swing.JComboBox();
        userDirectoryLabel = new javax.swing.JLabel();
        userDirectoryTextField = new javax.swing.JTextField();
        // "vor"
        searchUserDirectoryButton = new javax.swing.JButton();
        // hinter
        applyButton = new javax.swing.JButton();
        outputDirectoryTextField = new javax.swing.JTextField();
        searchOutputDirectoryButton = new javax.swing.JButton();
        outputDirectoryLabel = new javax.swing.JLabel();
        dataDirectoryLabel = new javax.swing.JLabel();
        dataDirectoryTextField = new javax.swing.JTextField();
        searchDataDirectoryButton = new javax.swing.JButton();
        standGraphicComboBox = new javax.swing.JComboBox();
        xmlFileLabel = new javax.swing.JLabel();
        xmlFileComboBox = new javax.swing.JComboBox();
        climateDataFileLabel = new javax.swing.JLabel();
        climateDataFileTextField = new javax.swing.JTextField();
        searchClimateDataFileButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("forestsimulator/gui"); // NOI18N
        setTitle(bundle.getString("TgUserDialog.title")); // NOI18N
        setModal(true);

        languageLabel.setText(bundle.getString("TgUserDialog.languageLabel.text")); // NOI18N

        languageSelector.setModel(languageOptions());
        languageSelector.setSelectedItem(activeLanguage());
        languageSelector.setName("languageSelector"); // NOI18N
        languageSelector.setPreferredSize(new java.awt.Dimension(100, 22));

        userDirectoryLabel.setText(bundle.getString("TgUserDialog.userDirectoryLabel.text")); // NOI18N

        userDirectoryTextField.setFont(userDirectoryTextField.getFont());

        searchUserDirectoryButton.setFont(searchUserDirectoryButton.getFont());
        searchUserDirectoryButton.setText(bundle.getString("TgUserDialog.searchUserDirectoryButton.text")); // NOI18N
        searchUserDirectoryButton.setAlignmentY(0.0F);
        searchUserDirectoryButton.setMinimumSize(new java.awt.Dimension(100, 25));
        searchUserDirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchUserDirectoryButtonActionPerformed(evt);
            }
        });

        applyButton.setText(bundle.getString("TgUserDialog.applyButton.text")); // NOI18N
        applyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyButtonActionPerformed(evt);
            }
        });

        outputDirectoryTextField.setFont(outputDirectoryTextField.getFont());

        searchOutputDirectoryButton.setFont(searchOutputDirectoryButton.getFont());
        searchOutputDirectoryButton.setText(bundle.getString("TgUserDialog.searchOutputDirectoryButton.text")); // NOI18N
        searchOutputDirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchOutputDirectoryButtonActionPerformed(evt);
            }
        });

        outputDirectoryLabel.setText(bundle.getString("TgUserDialog.outputDirectoryLabel.text")); // NOI18N

        dataDirectoryLabel.setText(bundle.getString("TgUserDialog.dataDirectoryLabel.text")); // NOI18N

        dataDirectoryTextField.setFont(dataDirectoryTextField.getFont());

        searchDataDirectoryButton.setFont(searchDataDirectoryButton.getFont());
        searchDataDirectoryButton.setText(bundle.getString("TgUserDialog.searchDataDirectoryButton.text")); // NOI18N
        searchDataDirectoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchDataDirectoryButtonActionPerformed(evt);
            }
        });

        standGraphicComboBox.setModel(new DefaultComboBoxModel(StandGraphicMode.values()));

        xmlFileLabel.setText(bundle.getString("TgUserDialog.xmlFileLabel.text")); // NOI18N

        climateDataFileLabel.setText(bundle.getString("TgUserDialog.climateDataFileLabel.text")); // NOI18N

        searchClimateDataFileButton.setFont(searchClimateDataFileButton.getFont());
        searchClimateDataFileButton.setText(bundle.getString("TgUserDialog.searchClimateDataFileButton.text")); // NOI18N
        searchClimateDataFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchClimateDataFileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(userDirectoryLabel)
                        .addComponent(dataDirectoryLabel)
                        .addComponent(outputDirectoryLabel)
                        .addComponent(applyButton, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(climateDataFileTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(xmlFileLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(xmlFileComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(languageLabel)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(languageSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(standGraphicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(userDirectoryTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
                                .addComponent(dataDirectoryTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(outputDirectoryTextField, javax.swing.GroupLayout.Alignment.LEADING))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(searchOutputDirectoryButton)
                                .addComponent(searchDataDirectoryButton)
                                .addComponent(searchUserDirectoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(searchClimateDataFileButton, javax.swing.GroupLayout.Alignment.TRAILING))))
                    .addComponent(climateDataFileLabel))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(languageSelector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(standGraphicComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(languageLabel))
                .addGap(18, 18, 18)
                .addComponent(userDirectoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchUserDirectoryButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(userDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(dataDirectoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dataDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchDataDirectoryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(outputDirectoryLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchOutputDirectoryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(climateDataFileLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(climateDataFileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchClimateDataFileButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xmlFileComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xmlFileLabel))
                .addGap(18, 18, 18)
                .addComponent(applyButton)
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(523, 369));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void searchDataDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchDataDirectoryButtonActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jf.setCurrentDirectory(user.getWorkingDir());
        jf.setDialogTitle(messages.getString("TgUserDialog.chooseDataDirDialog.title"));
        jf.showOpenDialog(this);
        File DataDir = jf.getSelectedFile();        
        dataDirectoryTextField.setText(DataDir.getAbsolutePath());
    }//GEN-LAST:event_searchDataDirectoryButtonActionPerformed

    private void searchOutputDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchOutputDirectoryButtonActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jf.setCurrentDirectory(user.getWorkingDir());
        jf.showOpenDialog(this);
        File WorkingDir = jf.getSelectedFile();
        outputDirectoryTextField.setText(WorkingDir.getAbsolutePath());
    }//GEN-LAST:event_searchOutputDirectoryButtonActionPerformed

    private void applyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyButtonActionPerformed
        try {
            saveSettings();
            JTextArea about = new JTextArea(messages.getString("TgUserDialog.applySettingsDialog.message"));
            JOptionPane.showMessageDialog(this, about, messages.getString("TgUserDialog.applySettingsDialog.title"), JOptionPane.INFORMATION_MESSAGE);
            System.exit(0);
            dispose();
        } catch (IOException e) {
            logger.log(Level.SEVERE, "Error! writing File standsimulation.ini", e);
        }
    }//GEN-LAST:event_applyButtonActionPerformed

    private void searchUserDirectoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchUserDirectoryButtonActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.setCurrentDirectory(user.getWorkingDir());
        jf.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jf.setDialogTitle(messages.getString("TgUserDialog.chooseUserDirDialog.title"));
        if (jf.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File ProgramDir = jf.getSelectedFile();
        userDirectoryTextField.setText(ProgramDir.getAbsolutePath());
        loadModels();
    }//GEN-LAST:event_searchUserDirectoryButtonActionPerformed

    private void searchClimateDataFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchClimateDataFileButtonActionPerformed
        JFileChooser jf = new JFileChooser();
        jf.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jf.setCurrentDirectory(user.getDataDir());
        if (jf.showOpenDialog(this) != JFileChooser.APPROVE_OPTION) {
            return;
        }
        File climateDataFile = jf.getSelectedFile();
        climateDataFileTextField.setText(climateDataFile.getAbsolutePath());
    }//GEN-LAST:event_searchClimateDataFileButtonActionPerformed

    private void saveSettings() throws IOException {
        UserLanguage.LanguageEntry selectedLanguage = (UserLanguage.LanguageEntry) languageSelector.getSelectedItem();
        int g3D = 0;
        if (standGraphicComboBox.getSelectedIndex()>0) g3D=1;
        user.saveSettings(userDirectoryTextField.getText(),
                dataDirectoryTextField.getText(),
                outputDirectoryTextField.getText(),
                selectedLanguage.language.locale(),
                (String) xmlFileComboBox.getSelectedItem(),
                climateDataFileTextField.getText(),
                g3D);
    }

    private void loadModels() {
        xmlFileComboBox.removeAllItems();
        File modelDirectory = new File(user.getProgramDir(), "models");
        if (!modelDirectory.isDirectory()) {
            return;
        }
// Liste mit Dateien erstellen 
        String entries[] = modelDirectory.list();
        for (String entry : entries) {
            if (entry.indexOf(".xml") > 0) {
                xmlFileComboBox.addItem(entry);
            }
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyButton;
    private javax.swing.JLabel climateDataFileLabel;
    private javax.swing.JTextField climateDataFileTextField;
    private javax.swing.JLabel dataDirectoryLabel;
    private javax.swing.JTextField dataDirectoryTextField;
    private javax.swing.JLabel languageLabel;
    private javax.swing.JComboBox languageSelector;
    private javax.swing.JLabel outputDirectoryLabel;
    private javax.swing.JTextField outputDirectoryTextField;
    private javax.swing.JButton searchClimateDataFileButton;
    private javax.swing.JButton searchDataDirectoryButton;
    private javax.swing.JButton searchOutputDirectoryButton;
    private javax.swing.JButton searchUserDirectoryButton;
    private javax.swing.JComboBox standGraphicComboBox;
    private javax.swing.JLabel userDirectoryLabel;
    private javax.swing.JTextField userDirectoryTextField;
    private javax.swing.JComboBox xmlFileComboBox;
    private javax.swing.JLabel xmlFileLabel;
    // End of variables declaration//GEN-END:variables

}
